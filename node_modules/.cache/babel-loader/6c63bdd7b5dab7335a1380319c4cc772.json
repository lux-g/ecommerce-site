{"ast":null,"code":"import _classCallCheck from\"/Users/lux/Desktop/WEBSITES FOR PORTFOLIO/THREEJS-ECOMMERCE/three-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lux/Desktop/WEBSITES FOR PORTFOLIO/THREEJS-ECOMMERCE/three-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import React from'react';import{useEffect,useRef}from'react';import storeImg from'../images/store.webp';import displacement from'../images/diss.png';import{motion}from\"framer-motion\";import*as THREE from'three';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var About=function About(){var webGl=useRef();//THREE JS\nuseEffect(function(){var Sketch=/*#__PURE__*/function(){function Sketch(){_classCallCheck(this,Sketch);this.time=0;this.container=webGl.current;this.scene=new THREE.Scene();this.width=this.container.offsetWidth;this.height=this.container.offsetHeight;this.camera=new THREE.PerspectiveCamera(70,this.width/this.height,0.01,10);this.camera.position.z=1;this.renderer=new THREE.WebGL1Renderer({antialias:true});this.container.appendChild(this.renderer.domElement);this.mouse=new THREE.Vector2();this.resize();this.setupResize();this.addObjects();this.mouseMovement();this.render();}_createClass(Sketch,[{key:\"setupResize\",value:function setupResize(){window.addEventListener('resize',this.resize.bind(this));}},{key:\"mouseMovement\",value:function mouseMovement(){var _this=this;window.addEventListener('mousemove',function(event){_this.mouse.x=event.clientX/_this.width*2-1;_this.mouse.y=event.clientY/_this.height*2+1;},false);}},{key:\"resize\",value:function resize(){this.width=this.container.offsetWidth;this.height=this.container.offsetHeight;this.renderer.setSize(this.width,this.height);this.camera.aspect=this.width/this.height;this.camera.updateProjectionMatrix();}},{key:\"addObjects\",value:function addObjects(){this.geometry=new THREE.PlaneGeometry(2.1,1.6,10,10);this.material=new THREE.MeshNormalMaterial();this.material=new THREE.ShaderMaterial({uniforms:{time:{type:\"f\",value:0},mouse:{type:\"v3\",value:new THREE.Vector3()},hover:{value:new THREE.Vector2(0.5,0.5)},hoverState:{value:0},oceanTexture:{type:\"t\",value:new THREE.TextureLoader().load(storeImg)},displacement:{type:\"t\",value:new THREE.TextureLoader().load(displacement)},resolution:{type:\"v4\",value:new THREE.Vector4()},uvRate1:{value:new THREE.Vector2(1,1)}},fragmentShader:\"\\n                        uniform sampler2D oceanTexture;\\n                        uniform sampler2D displacement;\\n                        varying vec2 vUv;\\n                        varying float vNoise;\\n                        uniform float time;\\n\\n\\n                        varying vec3 vPosition;\\n                        uniform vec3 mouse;\\n\\n\\n                        float map(float value, float min1, float max1, float min2, float max2) {\\n                        return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\\n                        }\\n\\n                        void main(){\\n\\n                            vec2 newUV = vUv;\\n                            newUV = vec2(newUV.x, newUV.y + 0.009*sin(newUV.x*20. + time));\\n                            vec4 displace = texture2D(displacement, vUv.yx );\\n\\n                            vec2 direction = normalize(vPosition.xy - mouse.xy);\\n\\n                            float dist = distance(vPosition,mouse);\\n\\n                            float prox = 1. - map(dist, 0., 0.3, 0., 1.);\\n                            prox = clamp(prox, 0., 1.);\\n\\n\\n                            vec2 zoomedUV = vUv + direction * prox * 0.02;\\n\\n                            vec2 zoomedUV1 = mix(vUv, mouse.xy + vec2(0.5), prox * 0.2);\\n                            vec4 color = texture2D(oceanTexture, zoomedUV1);\\n\\n                            gl_FragColor = color;\\n                        }\\n                    \",vertexShader:\"\\n                        varying vec2 vUv;\\n                        uniform float time;\\n                        uniform vec2 hover;\\n                        varying float noise;\\n                        varying float vNoise;\\n                        varying vec3 vPosition;\\n\\n                        //\\tClassic Perlin 3D Noise \\n                        //\\tby Stefan Gustavson\\n                        //\\n                        vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\n                        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\n                        vec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\n                        float cnoise(vec3 P){\\n                        vec3 Pi0 = floor(P); // Integer part for indexing\\n                        vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n                        Pi0 = mod(Pi0, 289.0);\\n                        Pi1 = mod(Pi1, 289.0);\\n                        vec3 Pf0 = fract(P); // Fractional part for interpolation\\n                        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n                        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n                        vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n                        vec4 iz0 = Pi0.zzzz;\\n                        vec4 iz1 = Pi1.zzzz;\\n\\n                        vec4 ixy = permute(permute(ix) + iy);\\n                        vec4 ixy0 = permute(ixy + iz0);\\n                        vec4 ixy1 = permute(ixy + iz1);\\n\\n                        vec4 gx0 = ixy0 / 7.0;\\n                        vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n                        gx0 = fract(gx0);\\n                        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n                        vec4 sz0 = step(gz0, vec4(0.0));\\n                        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n                        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n                        vec4 gx1 = ixy1 / 7.0;\\n                        vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n                        gx1 = fract(gx1);\\n                        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n                        vec4 sz1 = step(gz1, vec4(0.0));\\n                        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n                        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n                        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n                        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n                        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n                        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n                        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n                        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n                        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n                        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n                        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n                        g000 *= norm0.x;\\n                        g010 *= norm0.y;\\n                        g100 *= norm0.z;\\n                        g110 *= norm0.w;\\n                        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n                        g001 *= norm1.x;\\n                        g011 *= norm1.y;\\n                        g101 *= norm1.z;\\n                        g111 *= norm1.w;\\n\\n                        float n000 = dot(g000, Pf0);\\n                        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n                        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n                        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n                        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n                        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n                        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n                        float n111 = dot(g111, Pf1);\\n\\n                        vec3 fade_xyz = fade(Pf0);\\n                        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n                        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n                        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \\n                        return 2.2 * n_xyz;\\n                        }\\n\\n\\n                        void main(){\\n                            vec3 newposition = position;\\n                            float PI = 3.1415925;\\n\\n                            float noise = cnoise(3.*vec3(position.x, position.y, position.z + time/80.));\\n\\n                            newposition.z += 0.2*cnoise(vec3(position.x*1.,position.y*1. + time/25.,0.));\\n\\n                            vUv = uv;\\n\\n                            vPosition = position;\\n\\n                            gl_Position = projectionMatrix * modelViewMatrix * vec4( newposition, 1.0);\\n                        }\\n                    \"});this.mesh=new THREE.Mesh(this.geometry,this.material);this.scene.add(this.mesh);}},{key:\"render\",value:function render(){this.time+=0.05;this.material.uniforms.time.value=this.time;this.renderer.render(this.scene,this.camera);window.requestAnimationFrame(this.render.bind(this));}}]);return Sketch;}();new Sketch();},[]);useEffect(function(){var vh=window.innerHeight*0.01;// Then we set the value in the --vh custom property to the root of the document\ndocument.documentElement.style.setProperty('--vh',\"\".concat(vh,\"px\"));});useEffect(function(){window.addEventListener('resize',function(){// We execute the same script as before\nvar vh=window.innerHeight*0.01;document.documentElement.style.setProperty('--vh',\"\".concat(vh,\"px\"));});});return/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0},animate:{opacity:1},transition:{duration:1},exit:{opacity:0},children:/*#__PURE__*/_jsxs(\"div\",{className:\"about-page\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"about-page__text\",children:/*#__PURE__*/_jsx(\"p\",{children:\"9 Fifty is deeply rooted in street culture with a luxury aesthetic. We grew to embody culture, and play an integral part in its constant regeneration. Skaters, punks, hip-hop heads and the young counter culture at large. 9 Fifty established itself as a brand known for its quality, style, and authenticity, made for artists, photographers, designers, musicians, filmmakers, and writers who defied conventions and contributed to its unique identity and attitude.\"})}),/*#__PURE__*/_jsx(\"div\",{ref:webGl,className:\"container\"})]})});};export default About;","map":{"version":3,"sources":["/Users/lux/Desktop/WEBSITES FOR PORTFOLIO/THREEJS-ECOMMERCE/three-site/src/components/About.js"],"names":["React","useEffect","useRef","storeImg","displacement","motion","THREE","About","webGl","Sketch","time","container","current","scene","Scene","width","offsetWidth","height","offsetHeight","camera","PerspectiveCamera","position","z","renderer","WebGL1Renderer","antialias","appendChild","domElement","mouse","Vector2","resize","setupResize","addObjects","mouseMovement","render","window","addEventListener","bind","event","x","clientX","y","clientY","setSize","aspect","updateProjectionMatrix","geometry","PlaneGeometry","material","MeshNormalMaterial","ShaderMaterial","uniforms","type","value","Vector3","hover","hoverState","oceanTexture","TextureLoader","load","resolution","Vector4","uvRate1","fragmentShader","vertexShader","mesh","Mesh","add","requestAnimationFrame","vh","innerHeight","document","documentElement","style","setProperty","opacity","duration"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect, useRef } from 'react'\nimport storeImg from '../images/store.webp'\nimport displacement from '../images/diss.png'\nimport { motion } from \"framer-motion\"\nimport * as THREE from 'three'\n\n\n\nconst About = () => {\n\n    const webGl = useRef()\n\n    //THREE JS\n    useEffect(()=> {\n        class Sketch{\n            constructor(){\n                this.time = 0;\n                this.container = webGl.current\n                this.scene = new THREE.Scene()\n\n                this.width = this.container.offsetWidth\n                this.height = this.container.offsetHeight\n                \n                this.camera = new THREE.PerspectiveCamera( 70, this.width / this.height, 0.01, 10)\n                this.camera.position.z = 1\n\n                this.renderer = new THREE.WebGL1Renderer({ antialias: true })\n                this.container.appendChild(this.renderer.domElement)\n                \n                this.mouse = new THREE.Vector2()\n\n                \n                this.resize()\n                this.setupResize()\n                this.addObjects()\n                this.mouseMovement()\n                this.render()\n            }\n\n            setupResize(){\n                window.addEventListener('resize', this.resize.bind(this))\n            }\n\n            mouseMovement(){\n                window.addEventListener('mousemove', (event) => {\n                    this.mouse.x = ( event.clientX / this.width ) * 2 - 1\n                    this.mouse.y = ( event.clientY / this.height ) * 2 + 1\n\n                }, false)\n            }\n\n            resize(){\n                this.width = this.container.offsetWidth\n                this.height = this.container.offsetHeight\n                this.renderer.setSize(this.width, this.height)\n                this.camera.aspect = this.width / this.height\n                this.camera.updateProjectionMatrix()\n            }\n\n            addObjects(){\n                this.geometry = new THREE.PlaneGeometry(2.1, 1.6, 10, 10)\n                this.material = new THREE.MeshNormalMaterial()\n\n                this.material = new THREE.ShaderMaterial({\n                    uniforms: {\n                        time: {type: \"f\", value: 0},\n                        mouse: {type: \"v3\", value: new THREE.Vector3()},\n                        hover: {value: new THREE.Vector2(0.5, 0.5)},\n                        hoverState: {value: 0},\n                        oceanTexture: {type: \"t\", value: new THREE.TextureLoader().load(storeImg)},\n                        displacement: {type: \"t\", value: new THREE.TextureLoader().load(displacement)},\n                        resolution: {type: \"v4\", value: new THREE.Vector4()},\n                        uvRate1: {value: new THREE.Vector2(1, 1)}\n                    },\n                    fragmentShader: `\n                        uniform sampler2D oceanTexture;\n                        uniform sampler2D displacement;\n                        varying vec2 vUv;\n                        varying float vNoise;\n                        uniform float time;\n\n\n                        varying vec3 vPosition;\n                        uniform vec3 mouse;\n\n\n                        float map(float value, float min1, float max1, float min2, float max2) {\n                        return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n                        }\n\n                        void main(){\n\n                            vec2 newUV = vUv;\n                            newUV = vec2(newUV.x, newUV.y + 0.009*sin(newUV.x*20. + time));\n                            vec4 displace = texture2D(displacement, vUv.yx );\n\n                            vec2 direction = normalize(vPosition.xy - mouse.xy);\n\n                            float dist = distance(vPosition,mouse);\n\n                            float prox = 1. - map(dist, 0., 0.3, 0., 1.);\n                            prox = clamp(prox, 0., 1.);\n\n\n                            vec2 zoomedUV = vUv + direction * prox * 0.02;\n\n                            vec2 zoomedUV1 = mix(vUv, mouse.xy + vec2(0.5), prox * 0.2);\n                            vec4 color = texture2D(oceanTexture, zoomedUV1);\n\n                            gl_FragColor = color;\n                        }\n                    `,\n                    vertexShader: `\n                        varying vec2 vUv;\n                        uniform float time;\n                        uniform vec2 hover;\n                        varying float noise;\n                        varying float vNoise;\n                        varying vec3 vPosition;\n\n                        //\tClassic Perlin 3D Noise \n                        //\tby Stefan Gustavson\n                        //\n                        vec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\n                        vec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n                        vec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\n                        float cnoise(vec3 P){\n                        vec3 Pi0 = floor(P); // Integer part for indexing\n                        vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n                        Pi0 = mod(Pi0, 289.0);\n                        Pi1 = mod(Pi1, 289.0);\n                        vec3 Pf0 = fract(P); // Fractional part for interpolation\n                        vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n                        vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n                        vec4 iy = vec4(Pi0.yy, Pi1.yy);\n                        vec4 iz0 = Pi0.zzzz;\n                        vec4 iz1 = Pi1.zzzz;\n\n                        vec4 ixy = permute(permute(ix) + iy);\n                        vec4 ixy0 = permute(ixy + iz0);\n                        vec4 ixy1 = permute(ixy + iz1);\n\n                        vec4 gx0 = ixy0 / 7.0;\n                        vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n                        gx0 = fract(gx0);\n                        vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n                        vec4 sz0 = step(gz0, vec4(0.0));\n                        gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n                        gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n                        vec4 gx1 = ixy1 / 7.0;\n                        vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n                        gx1 = fract(gx1);\n                        vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n                        vec4 sz1 = step(gz1, vec4(0.0));\n                        gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n                        gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n                        vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n                        vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n                        vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n                        vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n                        vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n                        vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n                        vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n                        vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n                        vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n                        g000 *= norm0.x;\n                        g010 *= norm0.y;\n                        g100 *= norm0.z;\n                        g110 *= norm0.w;\n                        vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n                        g001 *= norm1.x;\n                        g011 *= norm1.y;\n                        g101 *= norm1.z;\n                        g111 *= norm1.w;\n\n                        float n000 = dot(g000, Pf0);\n                        float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n                        float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n                        float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n                        float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n                        float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n                        float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n                        float n111 = dot(g111, Pf1);\n\n                        vec3 fade_xyz = fade(Pf0);\n                        vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n                        vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n                        float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n                        return 2.2 * n_xyz;\n                        }\n\n\n                        void main(){\n                            vec3 newposition = position;\n                            float PI = 3.1415925;\n\n                            float noise = cnoise(3.*vec3(position.x, position.y, position.z + time/80.));\n\n                            newposition.z += 0.2*cnoise(vec3(position.x*1.,position.y*1. + time/25.,0.));\n\n                            vUv = uv;\n\n                            vPosition = position;\n\n                            gl_Position = projectionMatrix * modelViewMatrix * vec4( newposition, 1.0);\n                        }\n                    `\n                })\n\n\n                this.mesh = new THREE.Mesh(this.geometry, this.material)\n                this.scene.add(this.mesh)\n            }\n\n            render(){\n                this.time+=0.05\n\n                this.material.uniforms.time.value = this.time\n\n                this.renderer.render(this.scene, this.camera)\n\n                window.requestAnimationFrame(this.render.bind(this))\n            }\n        }\n\n        new Sketch()\n\n    }, [])\n\n    useEffect(()=> {\n        let vh = window.innerHeight * 0.01;\n        // Then we set the value in the --vh custom property to the root of the document\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n    })\n\n    useEffect(()=> {\n        window.addEventListener('resize', () => {\n        // We execute the same script as before\n        let vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n        });\n    })\n\n\n\n    return (\n        <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 1 }}\n            exit={{ opacity: 0 }}\n        >\n            <div className=\"about-page\">\n                <div className=\"about-page__text\">\n                    <p>9 Fifty is deeply rooted in street culture with a luxury aesthetic. We grew to embody culture, and play an integral part in its constant regeneration. Skaters, punks, hip-hop heads and the young counter culture at large. 9 Fifty established itself as a brand known for its quality, style, and authenticity, made for artists, photographers, designers, musicians, filmmakers, and writers who defied conventions and contributed to its unique identity and attitude.</p>\n                </div>\n                <div ref={webGl} className=\"container\"></div>\n            </div>\n        </motion.div>\n    )\n}\n\nexport default About\n"]},"metadata":{},"sourceType":"module"}