{"ast":null,"code":"var _jsxFileName = \"/Users/lux/Desktop/websites/REACT/THREEJS-ECOMMERCE/three-site/src/components/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useRef } from 'react';\nimport * as THREE from \"three\";\nimport vertex from '../vertex.glsl';\nimport CircleType from \"circletype\";\nimport images from '../images';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  _s();\n\n  useEffect(() => {\n    function lerp(start, end, t) {\n      return start * (1 - t) + end * t;\n    } //mouse cords\n\n\n    let targetX = 0;\n    let targetY = 0; //load image textures for mesh\n\n    const textureOne = new THREE.TextureLoader().load(images.imageOne);\n    const textureTwo = new THREE.TextureLoader().load(images.imageTwo);\n    const textureThree = new THREE.TextureLoader().load(images.imageThree);\n\n    class webgl {\n      constructor() {\n        this.container = document.querySelector('main');\n        this.links = [...document.querySelectorAll('span')];\n        this.scene = new THREE.Scene();\n        this.perspective = 1000;\n        this.sizes = new THREE.Vector2(0, 0); //mesh sizes\n\n        this.offset = new THREE.Vector2(0, 0); //mesh position\n\n        this.uniforms = {\n          uTexture: {\n            value: textureOne\n          },\n          uAlpha: {\n            value: 0.0\n          },\n          //opacity of mesh\n          uOffset: {\n            value: new THREE.Vector2(0.0, 0.0)\n          } //postion of mesh for curve efx\n\n        };\n        this.links.forEach((link, idx) => {\n          link.addEventListener('mouseenter', () => {\n            switch (idx) {\n              case 0:\n                this.uniforms.uTexture.value = textureOne;\n                break;\n\n              case 1:\n                this.uniforms.uTexture.value = textureTwo;\n                break;\n\n              case 2:\n                this.uniforms.uTexture.value = textureThree;\n                break;\n            }\n          });\n        });\n        this.addEventListeners(document.querySelector('h1'));\n        this.setupCamera();\n        this.onMouseMove();\n        this.createMesh();\n        this.render();\n      }\n\n      get viewport() {\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n        let aspectRatio = width / height;\n        return {\n          width,\n          height,\n          aspectRatio\n        };\n      }\n\n      onMouseMove() {\n        window.addEventListener('mousemove', e => {\n          targetX = e.clientX;\n          targetY = e.clientY;\n        });\n      }\n\n      addEventListeners(element) {\n        element.addEventListener('mouseenter', () => {\n          this.linksHover = true;\n        });\n        element.addEventListener('mouseleave', () => {\n          this.linksHover = false;\n        });\n      }\n\n      setupCamera() {\n        //adjust dimensions on resize\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        let fov = 180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective)) / Math.PI;\n        this.camera = new THREE.PerspectiveCamera(fov, this.viewport.aspectRatio, 0.1, 1000);\n        this.camera.position.set(0, 0, this.perspective);\n        this.renderer = new THREE.WebGL1Renderer({\n          antialias: true,\n          alpha: true\n        });\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.container.appendChild(this.renderer.domElement);\n      }\n\n      onWindowResize() {\n        this.camera.aspect = this.viewport.aspectRatio;\n        this.camera.fov = 180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective)) / Math.PI;\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\n        this.camera.updateProjectionMatrix();\n      }\n\n      createMesh() {\n        this.geometry = new THREE.PlaneBufferGeometry(1, 1, 20, 20); //this.material = new THREE.MeshBasicMaterial({color: 0xff0000});\n\n        this.material = new THREE.ShaderMaterial({\n          uniforms: this.uniforms,\n          vertexShader: vertex,\n          fragmentShader: fragment,\n          transparent: true\n        });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.sizes.set(250, 350, 1);\n        this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n        this.mesh.position.set(this.offset.x, this.offset.y);\n        this.scene.add(this.mesh);\n      }\n\n      render() {\n        this.renderer.render(this.scene, this.camera);\n        this.offset.x = lerp(this.offset.x, targetX, 0.1);\n        this.offset.y = lerp(this.offset.y, targetY, 0.1); //this.uniforms.uOffset.value.set((targetX - this.offset.x) * 0.0005, - (targetY - this.offset.y) * 0.0005);\n\n        this.linksHover ? this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 1.0, 1.0) : this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0.0, 0.1);\n        this.mesh.position.set(this.offset.x - window.innerWidth / 2, -this.offset.y + window.innerHeight / 2);\n        window.requestAnimationFrame(this.render.bind(this));\n      }\n\n    }\n\n    new webgl();\n  });\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero__title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hero__nine\",\n            children: \"NINE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hero__fifty\",\n            children: \"FIFTY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"her__store\",\n            children: \"STORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hero__logo\",\n          children: \"9 FIFTY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hero__top-center\",\n          children: \"STREETWEAR CLOTHING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          className: \"hero__about\",\n          children: \"ABOUT US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          className: \"hero__shop\",\n          children: \"SHOP NOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lux/Desktop/websites/REACT/THREEJS-ECOMMERCE/three-site/src/components/Header.js"],"names":["React","useEffect","useRef","THREE","vertex","CircleType","images","Header","lerp","start","end","t","targetX","targetY","textureOne","TextureLoader","load","imageOne","textureTwo","imageTwo","textureThree","imageThree","webgl","constructor","container","document","querySelector","links","querySelectorAll","scene","Scene","perspective","sizes","Vector2","offset","uniforms","uTexture","value","uAlpha","uOffset","forEach","link","idx","addEventListener","addEventListeners","setupCamera","onMouseMove","createMesh","render","viewport","width","window","innerWidth","height","innerHeight","aspectRatio","e","clientX","clientY","element","linksHover","onWindowResize","bind","fov","Math","atan","PI","camera","PerspectiveCamera","position","set","renderer","WebGL1Renderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","appendChild","domElement","aspect","updateProjectionMatrix","geometry","PlaneBufferGeometry","material","ShaderMaterial","vertexShader","fragmentShader","fragment","transparent","mesh","Mesh","scale","x","y","add","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useEffect, useRef } from 'react'\nimport * as THREE from \"three\";\nimport vertex from '../vertex.glsl'\nimport CircleType from \"circletype\";\nimport images from '../images'\n\n\nconst Header = () => {\n\n    useEffect(()=> {\n        function lerp(start, end, t){\n            return start * (1 - t) + end * t;\n        }\n\n        //mouse cords\n        let targetX = 0;\n        let targetY = 0;\n\n        //load image textures for mesh\n        const textureOne = new THREE.TextureLoader().load(images.imageOne);\n        const textureTwo = new THREE.TextureLoader().load(images.imageTwo);\n        const textureThree = new THREE.TextureLoader().load(images.imageThree);\n\n        class webgl{\n            constructor(){\n                this.container = document.querySelector('main');\n                this.links = [...document.querySelectorAll('span')];\n                this.scene = new THREE.Scene();\n                this.perspective = 1000;\n                this.sizes = new THREE.Vector2(0, 0); //mesh sizes\n                this.offset = new THREE.Vector2(0, 0) //mesh position\n                this.uniforms = {\n                    uTexture: { value: textureOne},\n                    uAlpha: { value: 0.0},//opacity of mesh\n                    uOffset: { value: new THREE.Vector2(0.0, 0.0)}//postion of mesh for curve efx\n                }\n                this.links.forEach((link, idx)=> {\n                    link.addEventListener('mouseenter', ()=> {\n                        switch(idx){\n                            case 0:\n                                this.uniforms.uTexture.value = textureOne;\n                                break;\n                            case 1: \n                                this.uniforms.uTexture.value = textureTwo;\n                                break;\n                            case 2:\n                                this.uniforms.uTexture.value = textureThree;\n                                break;\n                        }\n                    })\n                })\n\n                this.addEventListeners(document.querySelector('h1'));\n                this.setupCamera();\n                this.onMouseMove();\n                this.createMesh();\n                this.render();\n            }\n\n            get viewport(){\n                let width = window.innerWidth;\n                let height = window.innerHeight;\n                let aspectRatio = width / height;\n\n                return {\n                    width,\n                    height,\n                    aspectRatio\n                }\n            }\n\n            onMouseMove(){\n                window.addEventListener('mousemove', (e)=> {\n                    targetX = e.clientX;\n                    targetY = e.clientY;\n                })\n            }\n\n            addEventListeners(element){\n                element.addEventListener('mouseenter', ()=> {\n                    this.linksHover = true;\n                })\n                element.addEventListener('mouseleave', ()=> {\n                    this.linksHover = false;\n                })\n            }\n\n            setupCamera(){\n                //adjust dimensions on resize\n                window.addEventListener('resize', this.onWindowResize.bind(this))\n                \n                let fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n                this.camera = new THREE.PerspectiveCamera(fov, this.viewport.aspectRatio, 0.1, 1000);\n                this.camera.position.set(0, 0 , this.perspective);\n\n                this.renderer = new THREE.WebGL1Renderer({antialias: true,alpha: true });\n                this.renderer.setSize(this.viewport.width, this.viewport.height);\n                this.renderer.setPixelRatio(window.devicePixelRatio);\n                this.container.appendChild(this.renderer.domElement)\n            }\n\n            onWindowResize(){\n                this.camera.aspect = this.viewport.aspectRatio;\n                this.camera.fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n                this.renderer.setSize(this.viewport.width, this.viewport.height);\n                this.camera.updateProjectionMatrix();\n            }\n\n            createMesh(){\n                this.geometry = new THREE.PlaneBufferGeometry(1, 1, 20, 20);\n                //this.material = new THREE.MeshBasicMaterial({color: 0xff0000});\n                this.material = new THREE.ShaderMaterial({\n                    uniforms: this.uniforms,\n                    vertexShader: vertex,\n                    fragmentShader: fragment,\n                    transparent: true\n                })\n                this.mesh = new THREE.Mesh(this.geometry, this.material);\n                this.sizes.set(250, 350, 1);\n                this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n                this.mesh.position.set(this.offset.x, this.offset.y);\n                this.scene.add(this.mesh);\n            }\n\n            render(){\n                this.renderer.render(this.scene, this.camera);\n                this.offset.x = lerp(this.offset.x, targetX, 0.1);\n                this.offset.y = lerp(this.offset.y, targetY, 0.1);\n                //this.uniforms.uOffset.value.set((targetX - this.offset.x) * 0.0005, - (targetY - this.offset.y) * 0.0005);\n\n                this.linksHover\n                ? this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 1.0, 1.0)\n                : this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0.0, 0.1)\n\n                this.mesh.position.set(this.offset.x - (window.innerWidth / 2), -this.offset.y + (window.innerHeight / 2));\n                window.requestAnimationFrame(this.render.bind(this));\n            }\n        }\n\n\n        new webgl();\n    })\n\n    return (\n        <main>\n            <div className=\"hero\">\n                <div className=\"hero__title\">\n                    <h1>\n                        <span className=\"hero__nine\">NINE</span> \n                        <br/> \n                        <span className=\"hero__fifty\">FIFTY</span>\n                        <br/>\n                        <span className=\"her__store\">STORE</span>\n                    </h1>\n                    <p className=\"hero__logo\">9 FIFTY</p>\n                    <p className=\"hero__top-center\">STREETWEAR CLOTHING</p>\n                    <a href=\"\" className=\"hero__about\">ABOUT US</a>\n                    <a href=\"\" className=\"hero__shop\">SHOP NOW</a>\n                    <div className=\"circle\">\n                        <p>0</p>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}