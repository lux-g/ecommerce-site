{"ast":null,"code":"var _jsxFileName = \"/Users/lux/Desktop/websites/REACT/THREEJS-ECOMMERCE/three-site/src/components/Header.js\";\nimport React from 'react';\nimport { useEffect } from 'react';\nimport * as THREE from \"three\";\nimport images from '../images';\nimport { Link } from 'react-router-dom';\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = () => {\n  // //THREE JS \n  // useEffect(()=> {\n  //     function lerp(start, end, t){\n  //         return start * (1 - t) + end * t;\n  //     }\n  //     //mouse cords\n  //     let targetX = 0;\n  //     let targetY = 0;\n  //     //load image textures for mesh\n  //     const textureOne = new THREE.TextureLoader().load(images.imageOne);\n  //     const textureTwo = new THREE.TextureLoader().load(images.imageTwo);\n  //     const textureThree = new THREE.TextureLoader().load(images.imageThree);\n  //     class webgl{\n  //         constructor(){\n  //             this.container = document.querySelector('main');\n  //             this.links = [...document.querySelectorAll('span')];\n  //             this.scene = new THREE.Scene();\n  //             this.perspective = 1000;\n  //             this.sizes = new THREE.Vector2(0, 0); //mesh sizes\n  //             this.offset = new THREE.Vector2(0, 0) //mesh position\n  //             this.uniforms = {\n  //                 uTexture: { value: textureOne},\n  //                 uAlpha: { value: 0.0},//opacity of mesh\n  //                 uOffset: { value: new THREE.Vector2(0.0, 0.0)}//postion of mesh for curve efx\n  //             }\n  //             this.links.forEach((link, idx)=> {\n  //                 link.addEventListener('mouseenter', ()=> {\n  //                     switch(idx){\n  //                         case 0:\n  //                             this.uniforms.uTexture.value = textureOne;\n  //                             break;\n  //                         case 1: \n  //                             this.uniforms.uTexture.value = textureTwo;\n  //                             break;\n  //                         case 2:\n  //                             this.uniforms.uTexture.value = textureThree;\n  //                             break;\n  //                     }\n  //                 })\n  //             })\n  //             this.addEventListeners(document.querySelector('h1'));\n  //             this.setupCamera();\n  //             this.onMouseMove();\n  //             this.createMesh();\n  //             this.render();\n  //         }\n  //         get viewport(){\n  //             let width = window.innerWidth;\n  //             let height = window.innerHeight;\n  //             let aspectRatio = width / height;\n  //             return {\n  //                 width,\n  //                 height,\n  //                 aspectRatio\n  //             }\n  //         }\n  //         onMouseMove(){\n  //             window.addEventListener('mousemove', (e)=> {\n  //                 targetX = e.clientX;\n  //                 targetY = e.clientY;\n  //             })\n  //         }\n  //         addEventListeners(element){\n  //             element.addEventListener('mouseenter', ()=> {\n  //                 this.linksHover = true;\n  //             })\n  //             element.addEventListener('mouseleave', ()=> {\n  //                 this.linksHover = false;\n  //             })\n  //         }\n  //         setupCamera(){\n  //             //adjust dimensions on resize\n  //             window.addEventListener('resize', this.onWindowResize.bind(this))\n  //             let fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n  //             this.camera = new THREE.PerspectiveCamera(fov, this.viewport.aspectRatio, 0.1, 1000);\n  //             this.camera.position.set(0, 0 , this.perspective);\n  //             this.renderer = new THREE.WebGL1Renderer({antialias: true,alpha: true });\n  //             this.renderer.setSize(this.viewport.width, this.viewport.height);\n  //             this.renderer.setPixelRatio(window.devicePixelRatio);\n  //             this.container.appendChild(this.renderer.domElement)\n  //         }\n  //         onWindowResize(){\n  //             this.camera.aspect = this.viewport.aspectRatio;\n  //             this.camera.fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n  //             this.renderer.setSize(this.viewport.width, this.viewport.height);\n  //             this.camera.updateProjectionMatrix();\n  //         }\n  //         createMesh(){\n  //             this.geometry = new THREE.PlaneBufferGeometry(1, 1, 20, 20);\n  //             //this.material = new THREE.MeshBasicMaterial({color: 0xff0000});\n  //             this.material = new THREE.ShaderMaterial({\n  //                 uniforms: this.uniforms,\n  //                 vertexShader: `\n  //                     uniform sampler2D uTexture;\n  //                     uniform vec2 uOffset;\n  //                     varying vec2 vUv;\n  //                     float M_PI = 3.141529;\n  //                     vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\n  //                         position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n  //                         position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n  //                         return position;\n  //                     }\n  //                     void main(){\n  //                         vUv = uv;\n  //                         vec3 newPosition = deformationCurve(position, uv, uOffset);\n  //                         gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n  //                     }\n  //                 `,\n  //                 fragmentShader: `\n  //                     uniform sampler2D uTexture;\n  //                     uniform float uAlpha;\n  //                     uniform vec2 uOffset;\n  //                     varying vec2 vUv;\n  //                     vec3 rgbShift(sampler2D textureimage, vec2 uv, vec2 offset ){\n  //                         float r = texture2D(textureimage, uv + offset).r;\n  //                         vec2 gb = texture2D(textureimage, uv).gb;\n  //                         return vec3(r, gb);\n  //                     }\n  //                     void main(){\n  //                         // vec3 color = texture2D(uTexture, vUv).rgb;\n  //                         vec3 color = rgbShift(uTexture, vUv, uOffset);\n  //                         gl_FragColor = vec4(color, uAlpha);\n  //                     }\n  //                 `,\n  //                 transparent: true\n  //             })\n  //             this.mesh = new THREE.Mesh(this.geometry, this.material);\n  //             this.sizes.set(250, 350, 1);\n  //             this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n  //             this.mesh.position.set(this.offset.x, this.offset.y);\n  //             this.scene.add(this.mesh);\n  //         }\n  //         render(){\n  //             this.renderer.render(this.scene, this.camera);\n  //             this.offset.x = lerp(this.offset.x, targetX, 0.1);\n  //             this.offset.y = lerp(this.offset.y, targetY, 0.1);\n  //             //this.uniforms.uOffset.value.set((targetX - this.offset.x) * 0.0005, - (targetY - this.offset.y) * 0.0005);\n  //             this.linksHover\n  //             ? this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 1.0, 1.0)\n  //             : this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0.0, 0.1)\n  //             this.mesh.position.set(this.offset.x - (window.innerWidth / 2), -this.offset.y + (window.innerHeight / 2));\n  //             window.requestAnimationFrame(this.render.bind(this));\n  //         }\n  //     }\n  //     new webgl();\n  // })\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        className: \"main-nav__about-us\",\n        href: \"\",\n        children: \"ABOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/shop\",\n        className: \"main-nav__shop-now\",\n        href: \"\",\n        children: \"SHOP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item pos-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid__item-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hero\",\n        children: /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(motion.h2, {\n            className: \"hero__title\",\n            children: [/*#__PURE__*/_jsxDEV(motion.span, {\n              children: \"N\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n              children: \"I\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n              children: \"N\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n              children: \"E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n              className: \"hero__title-sub\",\n              children: [/*#__PURE__*/_jsxDEV(motion.span, {\n                children: \"F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n                children: \"I\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n                children: \"F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n                children: \"T\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(motion.span, {\n                children: \"Y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hero__title-sub-two\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"S\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"T\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"O\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"R\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lux/Desktop/websites/REACT/THREEJS-ECOMMERCE/three-site/src/components/Header.js"],"names":["React","useEffect","THREE","images","Link","motion","Header","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAEjsBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,oBAA5B;AAAiD,QAAA,IAAI,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,OAAT;AAAiB,QAAA,SAAS,EAAC,oBAA3B;AAAgD,QAAA,IAAI,EAAC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAgBI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAmBI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ,eAsBI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eAyBI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAzBJ,eA4BI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAkCA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,MAAD,CAAQ,GAAR;AAAY,UAAA,OAAO,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAArB;AAAA,iCACI,QAAC,MAAD,CAAQ,EAAR;AAAW,YAAA,SAAS,EAAC,aAArB;AAAA,oCACI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI,QAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,SAAS,EAAC,iBAAvB;AAAA,sCACI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI,QAAC,MAAD,CAAQ,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAYI;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlCA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoEH,CAhPD;;KAAMD,M;AAkPN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useEffect} from 'react'\nimport * as THREE from \"three\";\nimport images from '../images'\nimport { Link } from 'react-router-dom'\nimport { motion } from \"framer-motion\"\n\n\nconst Header = () => {\n\n    // //THREE JS \n    // useEffect(()=> {\n    //     function lerp(start, end, t){\n    //         return start * (1 - t) + end * t;\n    //     }\n\n    //     //mouse cords\n    //     let targetX = 0;\n    //     let targetY = 0;\n\n    //     //load image textures for mesh\n    //     const textureOne = new THREE.TextureLoader().load(images.imageOne);\n    //     const textureTwo = new THREE.TextureLoader().load(images.imageTwo);\n    //     const textureThree = new THREE.TextureLoader().load(images.imageThree);\n\n    //     class webgl{\n    //         constructor(){\n    //             this.container = document.querySelector('main');\n    //             this.links = [...document.querySelectorAll('span')];\n    //             this.scene = new THREE.Scene();\n    //             this.perspective = 1000;\n    //             this.sizes = new THREE.Vector2(0, 0); //mesh sizes\n    //             this.offset = new THREE.Vector2(0, 0) //mesh position\n    //             this.uniforms = {\n    //                 uTexture: { value: textureOne},\n    //                 uAlpha: { value: 0.0},//opacity of mesh\n    //                 uOffset: { value: new THREE.Vector2(0.0, 0.0)}//postion of mesh for curve efx\n    //             }\n    //             this.links.forEach((link, idx)=> {\n    //                 link.addEventListener('mouseenter', ()=> {\n    //                     switch(idx){\n    //                         case 0:\n    //                             this.uniforms.uTexture.value = textureOne;\n    //                             break;\n    //                         case 1: \n    //                             this.uniforms.uTexture.value = textureTwo;\n    //                             break;\n    //                         case 2:\n    //                             this.uniforms.uTexture.value = textureThree;\n    //                             break;\n    //                     }\n    //                 })\n    //             })\n\n    //             this.addEventListeners(document.querySelector('h1'));\n    //             this.setupCamera();\n    //             this.onMouseMove();\n    //             this.createMesh();\n    //             this.render();\n    //         }\n\n    //         get viewport(){\n    //             let width = window.innerWidth;\n    //             let height = window.innerHeight;\n    //             let aspectRatio = width / height;\n\n    //             return {\n    //                 width,\n    //                 height,\n    //                 aspectRatio\n    //             }\n    //         }\n\n    //         onMouseMove(){\n    //             window.addEventListener('mousemove', (e)=> {\n    //                 targetX = e.clientX;\n    //                 targetY = e.clientY;\n    //             })\n    //         }\n\n    //         addEventListeners(element){\n    //             element.addEventListener('mouseenter', ()=> {\n    //                 this.linksHover = true;\n    //             })\n    //             element.addEventListener('mouseleave', ()=> {\n    //                 this.linksHover = false;\n    //             })\n    //         }\n\n    //         setupCamera(){\n    //             //adjust dimensions on resize\n    //             window.addEventListener('resize', this.onWindowResize.bind(this))\n                \n    //             let fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n    //             this.camera = new THREE.PerspectiveCamera(fov, this.viewport.aspectRatio, 0.1, 1000);\n    //             this.camera.position.set(0, 0 , this.perspective);\n\n    //             this.renderer = new THREE.WebGL1Renderer({antialias: true,alpha: true });\n    //             this.renderer.setSize(this.viewport.width, this.viewport.height);\n    //             this.renderer.setPixelRatio(window.devicePixelRatio);\n    //             this.container.appendChild(this.renderer.domElement)\n    //         }\n\n    //         onWindowResize(){\n    //             this.camera.aspect = this.viewport.aspectRatio;\n    //             this.camera.fov = (180 * (2 * Math.atan(this.viewport.height / 2 / this.perspective))) / Math.PI;\n    //             this.renderer.setSize(this.viewport.width, this.viewport.height);\n    //             this.camera.updateProjectionMatrix();\n    //         }\n\n    //         createMesh(){\n    //             this.geometry = new THREE.PlaneBufferGeometry(1, 1, 20, 20);\n    //             //this.material = new THREE.MeshBasicMaterial({color: 0xff0000});\n    //             this.material = new THREE.ShaderMaterial({\n    //                 uniforms: this.uniforms,\n    //                 vertexShader: `\n    //                     uniform sampler2D uTexture;\n    //                     uniform vec2 uOffset;\n    //                     varying vec2 vUv;\n\n    //                     float M_PI = 3.141529;\n\n    //                     vec3 deformationCurve(vec3 position, vec2 uv, vec2 offset){\n    //                         position.x = position.x + (sin(uv.y * M_PI) * offset.x);\n    //                         position.y = position.y + (sin(uv.x * M_PI) * offset.y);\n    //                         return position;\n    //                     }\n\n    //                     void main(){\n    //                         vUv = uv;\n    //                         vec3 newPosition = deformationCurve(position, uv, uOffset);\n    //                         gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n    //                     }\n    //                 `,\n    //                 fragmentShader: `\n    //                     uniform sampler2D uTexture;\n    //                     uniform float uAlpha;\n    //                     uniform vec2 uOffset;\n    //                     varying vec2 vUv;\n\n    //                     vec3 rgbShift(sampler2D textureimage, vec2 uv, vec2 offset ){\n    //                         float r = texture2D(textureimage, uv + offset).r;\n    //                         vec2 gb = texture2D(textureimage, uv).gb;\n    //                         return vec3(r, gb);\n    //                     }\n\n    //                     void main(){\n    //                         // vec3 color = texture2D(uTexture, vUv).rgb;\n    //                         vec3 color = rgbShift(uTexture, vUv, uOffset);\n    //                         gl_FragColor = vec4(color, uAlpha);\n    //                     }\n    //                 `,\n    //                 transparent: true\n    //             })\n    //             this.mesh = new THREE.Mesh(this.geometry, this.material);\n    //             this.sizes.set(250, 350, 1);\n    //             this.mesh.scale.set(this.sizes.x, this.sizes.y, 1);\n    //             this.mesh.position.set(this.offset.x, this.offset.y);\n    //             this.scene.add(this.mesh);\n    //         }\n\n    //         render(){\n    //             this.renderer.render(this.scene, this.camera);\n    //             this.offset.x = lerp(this.offset.x, targetX, 0.1);\n    //             this.offset.y = lerp(this.offset.y, targetY, 0.1);\n    //             //this.uniforms.uOffset.value.set((targetX - this.offset.x) * 0.0005, - (targetY - this.offset.y) * 0.0005);\n\n    //             this.linksHover\n    //             ? this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 1.0, 1.0)\n    //             : this.uniforms.uAlpha.value = lerp(this.uniforms.uAlpha.value, 0.0, 0.1)\n\n    //             this.mesh.position.set(this.offset.x - (window.innerWidth / 2), -this.offset.y + (window.innerHeight / 2));\n    //             window.requestAnimationFrame(this.render.bind(this));\n    //         }\n    //     }\n\n\n    //     new webgl();\n    // })\n\n    return (\n        <main>\n            <div className=\"main-nav\">\n                <Link to=\"/about\" className=\"main-nav__about-us\" href=\"\">ABOUT</Link>\n                <Link to=\"/shop\" className=\"main-nav__shop-now\" href=\"\">SHOP</Link>\n            </div> \n            <div className=\"content\">\n                <div className=\"grid\">\n                    <div className=\"grid__item pos-1\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-2\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-3\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-4\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-5\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-6\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-7\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-8\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-9\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                    <div className=\"grid__item pos-10\">\n                        <div className=\"grid__item-img\"></div>\n                    </div>\n                </div>\n\n            <div className=\"hero\">\n                <motion.div initial={{ opacity: 1 }}>\n                    <motion.h2 className=\"hero__title\">\n                        <motion.span>N</motion.span>\n                        <motion.span>I</motion.span>\n                        <motion.span>N</motion.span>\n                        <motion.span>E</motion.span>\n                        <motion.span className=\"hero__title-sub\">\n                            <motion.span>F</motion.span>\n                            <motion.span>I</motion.span>\n                            <motion.span>F</motion.span>\n                            <motion.span>T</motion.span>\n                            <motion.span>Y</motion.span>\n                        </motion.span>\n                        <span className=\"hero__title-sub-two\">\n                            <span>S</span>\n                            <span>T</span>\n                            <span>O</span>\n                            <span>R</span>\n                            <span>E</span>\n                        </span>\n                    </motion.h2>\n                </motion.div>\n            </div>\n            \n        </div>\n        </main>\n    )\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}